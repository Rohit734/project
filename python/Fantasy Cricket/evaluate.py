# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Evaluate.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from fetchData import *


class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(584, 515)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("../../../.designer/icon/windowicon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        Dialog.setWindowIcon(icon)
        Dialog.setStyleSheet("background-color: rgb(131, 130, 129);")
        Dialog.setWindowFilePath("")
        self.gridLayout = QtWidgets.QGridLayout(Dialog)
        self.gridLayout.setObjectName("gridLayout")
        self.label = QtWidgets.QLabel(Dialog)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.gridLayout.addWidget(self.label, 0, 0, 1, 3)
        self.allteams = QtWidgets.QComboBox(Dialog)
        font = QtGui.QFont()
        font.setFamily("Segoe Script")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.allteams.setFont(font)
        self.allteams.setFocusPolicy(QtCore.Qt.NoFocus)
        self.allteams.setStyleSheet("background-color: rgb(148, 148, 148);")
        self.allteams.setFrame(False)
        self.allteams.setObjectName("allteams")
        self.gridLayout.addWidget(self.allteams, 1, 0, 1, 1)
        self.totalmatch = QtWidgets.QComboBox(Dialog)
        font = QtGui.QFont()
        font.setFamily("Segoe Script")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.totalmatch.setFont(font)
        self.totalmatch.setFocusPolicy(QtCore.Qt.NoFocus)
        self.totalmatch.setStyleSheet("background-color: rgb(148, 148, 148);")
        self.totalmatch.setFrame(False)
        self.totalmatch.setObjectName("totalmatch")
        self.gridLayout.addWidget(self.totalmatch, 1, 2, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.gridLayout.addItem(spacerItem, 2, 1, 1, 1)
        self.displayplayers = QtWidgets.QListWidget(Dialog)
        font = QtGui.QFont()
        font.setFamily("Segoe Script")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.displayplayers.setFont(font)
        self.displayplayers.setStyleSheet("background-color: rgb(148, 148, 148);")
        self.displayplayers.setObjectName("displayplayers")
        self.gridLayout.addWidget(self.displayplayers, 3, 0, 1, 1)
        self.calculate = QtWidgets.QPushButton(Dialog)
        self.calculate.setStyleSheet("background-color: rgb(148, 148, 148);")
        self.calculate.setObjectName("calculate")
        self.gridLayout.addWidget(self.calculate, 3, 1, 1, 1)
        self.displayScore = QtWidgets.QListWidget(Dialog)
        font = QtGui.QFont()
        font.setFamily("Segoe Script")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.displayScore.setFont(font)
        self.displayScore.setStyleSheet("background-color: rgb(148, 148, 148);")
        self.displayScore.setObjectName("displayScore")
        self.gridLayout.addWidget(self.displayScore, 3, 2, 1, 1)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label_2 = QtWidgets.QLabel(Dialog)
        font = QtGui.QFont()
        font.setFamily("Segoe Print")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.horizontalLayout.addWidget(self.label_2)
        self.TotalScore = QtWidgets.QLabel(Dialog)
        font = QtGui.QFont()
        font.setFamily("Segoe Print")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.TotalScore.setFont(font)
        self.TotalScore.setText("")
        self.TotalScore.setObjectName("TotalScore")
        self.horizontalLayout.addWidget(self.TotalScore)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem1)
        self.gridLayout.addLayout(self.horizontalLayout, 2, 2, 1, 1)
        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)


        self.calculate.clicked.connect(self.calculateButton)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Fantasy Cricket"))
        self.label.setText(_translate("Dialog", "Evaluate the performance of your Fantasty team"))
        self.calculate.setText(_translate("Dialog", "Calculate Score"))
        self.label_2.setText(_translate("Dialog", "Total Score :"))
        self.addData()

    def addData(self):
        """This function adds value into ComboBox"""
        TeamsAndMatch()
        self.allteams.addItems(info["TeamName"])
        self.totalmatch.addItems(info["TotalMatch"])


    def calculateButton(self):
        """This function is used to send team name,matchID and display score"""
        self.displayplayers.clear()
        self.displayScore.clear()
        match_data.clear()
        tscore = 0
        matchData(self.allteams.currentText(), self.totalmatch.currentText())
        for player in match_data.items():
            score = self.getPlayerScore(player[1])
            match_data[player[0]] = score
            tscore += int(score)
        self.TotalScore.setText(str(tscore))
        self.displayplayers.addItems(match_data.keys())
        self.displayScore.addItems(match_data.values())

    def getPlayerScore(self, p):
        """Calculate score for each player"""
        runs, faced, fours, sixes, bowled, maiden, given, wkts, catches, stumping, ro = p
        score = runs / 2 + fours + sixes * 2 + maiden * 4 + 10 * (wkts + catches + stumping + ro)
        if faced > 0:
            strike_rate = runs / faced * 100
        else:
            strike_rate = 0
        if bowled > 0:
            eco_rate = 6 * given / bowled
        else:
            eco_rate = 0
        if strike_rate > 100:
            score += 4
        elif strike_rate >= 80:
            score += 2
        if eco_rate < 2:
            score += 10
        elif eco_rate < 3.5:
            score += 7
        elif eco_rate < 4.5:
            score += 4
        if runs > 100:
            score += 10
        elif runs > 50:
            score += 5
        if wkts >= 5:
            score += 10
        elif wkts >= 3:
            score += 5

        return str(int(score))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    ui = Ui_Dialog()
    ui.setupUi(Dialog)
    Dialog.show()
    sys.exit(app.exec_())
